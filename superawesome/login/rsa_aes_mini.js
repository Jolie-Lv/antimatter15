var dbits;var canary=244837814094590;var j_lm=((canary&16777215)==15715070);function BigInteger(B,A,C){if(B!=null){if("number"==typeof B){this.fromNumber(B,A,C)}else{if(A==null&&"string"!=typeof B){this.fromString(B,256)}else{this.fromString(B,A)}}}}function nbi(){return new BigInteger(null)}function am1(E,A,B,D,G,F){while(--F>=0){var C=A*this[E++]+B[D]+G;G=Math.floor(C/67108864);B[D++]=C&67108863}return G}function am2(E,J,K,D,H,A){var G=J&32767,I=J>>15;while(--A>=0){var C=this[E]&32767;var F=this[E++]>>15;var B=I*C+F*G;C=G*C+((B&32767)<<15)+K[D]+(H&1073741823);H=(C>>>30)+(B>>>15)+I*F+(H>>>30);K[D++]=C&1073741823}return H}function am3(E,J,K,D,H,A){var G=J&16383,I=J>>14;while(--A>=0){var C=this[E]&16383;var F=this[E++]>>14;var B=I*C+F*G;C=G*C+((B&16383)<<14)+K[D]+H;H=(C>>28)+(B>>14)+I*F;K[D++]=C&268435455}return H}if(j_lm&&(navigator.appName=="Microsoft Internet Explorer")){BigInteger.prototype.am=am2;dbits=30}else{if(j_lm&&(navigator.appName!="Netscape")){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=((1<<dbits)-1);BigInteger.prototype.DV=(1<<dbits);var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz";var BI_RC=new Array();var rr,vv;rr="0".charCodeAt(0);for(vv=0;vv<=9;++vv){BI_RC[rr++]=vv}rr="a".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}rr="A".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv}function int2char(A){return BI_RM.charAt(A)}function intAt(B,A){var C=BI_RC[B.charCodeAt(A)];return(C==null)?-1:C}function bnpCopyTo(B){for(var A=this.t-1;A>=0;--A){B[A]=this[A]}B.t=this.t;B.s=this.s}function bnpFromInt(A){this.t=1;this.s=(A<0)?-1:0;if(A>0){this[0]=A}else{if(A<-1){this[0]=A+DV}else{this.t=0}}}function nbv(A){var B=nbi();B.fromInt(A);return B}function bnpFromString(G,B){var D;if(B==16){D=4}else{if(B==8){D=3}else{if(B==256){D=8}else{if(B==2){D=1}else{if(B==32){D=5}else{if(B==4){D=2}else{this.fromRadix(G,B);return }}}}}}this.t=0;this.s=0;var F=G.length,C=false,E=0;while(--F>=0){var A=(D==8)?G[F]&255:intAt(G,F);if(A<0){if(G.charAt(F)=="-"){C=true}continue}C=false;if(E==0){this[this.t++]=A}else{if(E+D>this.DB){this[this.t-1]|=(A&((1<<(this.DB-E))-1))<<E;this[this.t++]=(A>>(this.DB-E))}else{this[this.t-1]|=A<<E}}E+=D;if(E>=this.DB){E-=this.DB}}if(D==8&&(G[0]&128)!=0){this.s=-1;if(E>0){this[this.t-1]|=((1<<(this.DB-E))-1)<<E}}this.clamp();if(C){BigInteger.ZERO.subTo(this,this)}}function bnpClamp(){var A=this.s&this.DM;while(this.t>0&&this[this.t-1]==A){--this.t}}function bnToString(B){if(this.s<0){return"-"+this.negate().toString(B)}var C;if(B==16){C=4}else{if(B==8){C=3}else{if(B==2){C=1}else{if(B==32){C=5}else{if(B==4){C=2}else{return this.toRadix(B)}}}}}var E=(1<<C)-1,H,A=false,F="",D=this.t;var G=this.DB-(D*this.DB)%C;if(D-->0){if(G<this.DB&&(H=this[D]>>G)>0){A=true;F=int2char(H)}while(D>=0){if(G<C){H=(this[D]&((1<<G)-1))<<(C-G);H|=this[--D]>>(G+=this.DB-C)}else{H=(this[D]>>(G-=C))&E;if(G<=0){G+=this.DB;--D}}if(H>0){A=true}if(A){F+=int2char(H)}}}return A?F:"0"}function bnNegate(){var A=nbi();BigInteger.ZERO.subTo(this,A);return A}function bnAbs(){return(this.s<0)?this.negate():this}function bnCompareTo(A){var C=this.s-A.s;if(C!=0){return C}var B=this.t;C=B-A.t;if(C!=0){return C}while(--B>=0){if((C=this[B]-A[B])!=0){return C}}return 0}function nbits(A){var C=1,B;if((B=A>>>16)!=0){A=B;C+=16}if((B=A>>8)!=0){A=B;C+=8}if((B=A>>4)!=0){A=B;C+=4}if((B=A>>2)!=0){A=B;C+=2}if((B=A>>1)!=0){A=B;C+=1}return C}function bnBitLength(){if(this.t<=0){return 0}return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM))}function bnpDLShiftTo(C,B){var A;for(A=this.t-1;A>=0;--A){B[A+C]=this[A]}for(A=C-1;A>=0;--A){B[A]=0}B.t=this.t+C;B.s=this.s}function bnpDRShiftTo(C,B){for(var A=C;A<this.t;++A){B[A-C]=this[A]}B.t=Math.max(this.t-C,0);B.s=this.s}function bnpLShiftTo(H,D){var B=H%this.DB;var A=this.DB-B;var F=(1<<A)-1;var E=Math.floor(H/this.DB),G=(this.s<<B)&this.DM,C;for(C=this.t-1;C>=0;--C){D[C+E+1]=(this[C]>>A)|G;G=(this[C]&F)<<B}for(C=E-1;C>=0;--C){D[C]=0}D[E]=G;D.t=this.t+E+1;D.s=this.s;D.clamp()}function bnpRShiftTo(G,D){D.s=this.s;var E=Math.floor(G/this.DB);if(E>=this.t){D.t=0;return }var B=G%this.DB;var A=this.DB-B;var F=(1<<B)-1;D[0]=this[E]>>B;for(var C=E+1;C<this.t;++C){D[C-E-1]|=(this[C]&F)<<A;D[C-E]=this[C]>>B}if(B>0){D[this.t-E-1]|=(this.s&F)<<A}D.t=this.t-E;D.clamp()}function bnpSubTo(B,D){var C=0,E=0,A=Math.min(B.t,this.t);while(C<A){E+=this[C]-B[C];D[C++]=E&this.DM;E>>=this.DB}if(B.t<this.t){E-=B.s;while(C<this.t){E+=this[C];D[C++]=E&this.DM;E>>=this.DB}E+=this.s}else{E+=this.s;while(C<B.t){E-=B[C];D[C++]=E&this.DM;E>>=this.DB}E-=B.s}D.s=(E<0)?-1:0;if(E<-1){D[C++]=this.DV+E}else{if(E>0){D[C++]=E}}D.t=C;D.clamp()}function bnpMultiplyTo(B,D){var A=this.abs(),E=B.abs();var C=A.t;D.t=C+E.t;while(--C>=0){D[C]=0}for(C=0;C<E.t;++C){D[C+A.t]=A.am(0,E[C],D,C,0,A.t)}D.s=0;D.clamp();if(this.s!=B.s){BigInteger.ZERO.subTo(D,D)}}function bnpSquareTo(C){var A=this.abs();var B=C.t=2*A.t;while(--B>=0){C[B]=0}for(B=0;B<A.t-1;++B){var D=A.am(B,A[B],C,2*B,0,1);if((C[B+A.t]+=A.am(B+1,2*A[B],C,2*B+1,D,A.t-B-1))>=A.DV){C[B+A.t]-=A.DV;C[B+A.t+1]=1}}if(C.t>0){C[C.t-1]+=A.am(B,A[B],C,2*B,0,1)}C.s=0;C.clamp()}function bnpDivRemTo(J,G,F){var P=J.abs();if(P.t<=0){return }var H=this.abs();if(H.t<P.t){if(G!=null){G.fromInt(0)}if(F!=null){this.copyTo(F)}return }if(F==null){F=nbi()}var D=nbi(),A=this.s,I=J.s;var O=this.DB-nbits(P[P.t-1]);if(O>0){P.lShiftTo(O,D);H.lShiftTo(O,F)}else{P.copyTo(D);H.copyTo(F)}var L=D.t;var B=D[L-1];if(B==0){return }var K=B*(1<<this.F1)+((L>1)?D[L-2]>>this.F2:0);var S=this.FV/K,R=(1<<this.F1)/K,Q=1<<this.F2;var N=F.t,M=N-L,E=(G==null)?nbi():G;D.dlShiftTo(M,E);if(F.compareTo(E)>=0){F[F.t++]=1;F.subTo(E,F)}BigInteger.ONE.dlShiftTo(L,E);E.subTo(D,D);while(D.t<L){D[D.t++]=0}while(--M>=0){var C=(F[--N]==B)?this.DM:Math.floor(F[N]*S+(F[N-1]+Q)*R);if((F[N]+=D.am(0,C,F,M,0,L))<C){D.dlShiftTo(M,E);F.subTo(E,F);while(F[N]<--C){F.subTo(E,F)}}}if(G!=null){F.drShiftTo(L,G);if(A!=I){BigInteger.ZERO.subTo(G,G)}}F.t=L;F.clamp();if(O>0){F.rShiftTo(O,F)}if(A<0){BigInteger.ZERO.subTo(F,F)}}function bnMod(A){var B=nbi();this.abs().divRemTo(A,null,B);if(this.s<0&&B.compareTo(BigInteger.ZERO)>0){A.subTo(B,B)}return B}function Classic(A){this.m=A}function cConvert(A){if(A.s<0||A.compareTo(this.m)>=0){return A.mod(this.m)}else{return A}}function cRevert(A){return A}function cReduce(A){A.divRemTo(this.m,null,A)}function cMulTo(A,C,B){A.multiplyTo(C,B);this.reduce(B)}function cSqrTo(A,B){A.squareTo(B);this.reduce(B)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1){return 0}var A=this[0];if((A&1)==0){return 0}var B=A&3;B=(B*(2-(A&15)*B))&15;B=(B*(2-(A&255)*B))&255;B=(B*(2-(((A&65535)*B)&65535)))&65535;B=(B*(2-A*B%this.DV))%this.DV;return(B>0)?this.DV-B:-B}function Montgomery(A){this.m=A;this.mp=A.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<(A.DB-15))-1;this.mt2=2*A.t}function montConvert(A){var B=nbi();A.abs().dlShiftTo(this.m.t,B);B.divRemTo(this.m,null,B);if(A.s<0&&B.compareTo(BigInteger.ZERO)>0){this.m.subTo(B,B)}return B}function montRevert(A){var B=nbi();A.copyTo(B);this.reduce(B);return B}function montReduce(A){while(A.t<=this.mt2){A[A.t++]=0}for(var C=0;C<this.m.t;++C){var B=A[C]&32767;var D=(B*this.mpl+(((B*this.mph+(A[C]>>15)*this.mpl)&this.um)<<15))&A.DM;B=C+this.m.t;A[B]+=this.m.am(0,D,A,C,0,this.m.t);while(A[B]>=A.DV){A[B]-=A.DV;A[++B]++}}A.clamp();A.drShiftTo(this.m.t,A);if(A.compareTo(this.m)>=0){A.subTo(this.m,A)}}function montSqrTo(A,B){A.squareTo(B);this.reduce(B)}function montMulTo(A,C,B){A.multiplyTo(C,B);this.reduce(B)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return((this.t>0)?(this[0]&1):this.s)==0}function bnpExp(F,G){if(F>4294967295||F<1){return BigInteger.ONE}var E=nbi(),A=nbi(),D=G.convert(this),C=nbits(F)-1;D.copyTo(E);while(--C>=0){G.sqrTo(E,A);if((F&(1<<C))>0){G.mulTo(A,D,E)}else{var B=E;E=A;A=B}}return G.revert(E)}function bnModPowInt(B,A){var C;if(B<256||A.isEven()){C=new Classic(A)}else{C=new Montgomery(A)}return this.exp(B,C)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnClone(){var A=nbi();this.copyTo(A);return A}function bnIntValue(){if(this.s<0){if(this.t==1){return this[0]-this.DV}else{if(this.t==0){return -1}}}else{if(this.t==1){return this[0]}else{if(this.t==0){return 0}}}return((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0]}function bnByteValue(){return(this.t==0)?this.s:(this[0]<<24)>>24}function bnShortValue(){return(this.t==0)?this.s:(this[0]<<16)>>16}function bnpChunkSize(A){return Math.floor(Math.LN2*this.DB/Math.log(A))}function bnSigNum(){if(this.s<0){return -1}else{if(this.t<=0||(this.t==1&&this[0]<=0)){return 0}else{return 1}}}function bnpToRadix(A){if(A==null){A=10}if(this.signum()==0||A<2||A>36){return"0"}var C=this.chunkSize(A);var B=Math.pow(A,C);var F=nbv(B),G=nbi(),E=nbi(),D="";this.divRemTo(F,G,E);while(G.signum()>0){D=(B+E.intValue()).toString(A).substr(1)+D;G.divRemTo(F,G,E)}return E.intValue().toString(A)+D}function bnpFromRadix(I,F){this.fromInt(0);if(F==null){F=10}var D=this.chunkSize(F);var E=Math.pow(F,D),C=false,A=0,H=0;for(var B=0;B<I.length;++B){var G=intAt(I,B);if(G<0){if(I.charAt(B)=="-"&&this.signum()==0){C=true}continue}H=F*H+G;if(++A>=D){this.dMultiply(E);this.dAddOffset(H,0);A=0;H=0}}if(A>0){this.dMultiply(Math.pow(F,A));this.dAddOffset(H,0)}if(C){BigInteger.ZERO.subTo(this,this)}}function bnpFromNumber(C,B,E){if("number"==typeof B){if(C<2){this.fromInt(1)}else{this.fromNumber(C,E);if(!this.testBit(C-1)){this.bitwiseTo(BigInteger.ONE.shiftLeft(C-1),op_or,this)}if(this.isEven()){this.dAddOffset(1,0)}while(!this.isProbablePrime(B)){this.dAddOffset(2,0);if(this.bitLength()>C){this.subTo(BigInteger.ONE.shiftLeft(C-1),this)}}}}else{var A=new Array(),D=C&7;A.length=(C>>3)+1;B.nextBytes(A);if(D>0){A[0]&=((1<<D)-1)}else{A[0]=0}this.fromString(A,256)}}function bnToByteArray(){var B=this.t,C=new Array();C[0]=this.s;var D=this.DB-(B*this.DB)%8,E,A=0;if(B-->0){if(D<this.DB&&(E=this[B]>>D)!=(this.s&this.DM)>>D){C[A++]=E|(this.s<<(this.DB-D))}while(B>=0){if(D<8){E=(this[B]&((1<<D)-1))<<(8-D);E|=this[--B]>>(D+=this.DB-8)}else{E=(this[B]>>(D-=8))&255;if(D<=0){D+=this.DB;--B}}if((E&128)!=0){E|=-256}if(A==0&&(this.s&128)!=(E&128)){++A}if(A>0||E!=this.s){C[A++]=E}}}return C}function bnEquals(A){return(this.compareTo(A)==0)}function bnMin(A){return(this.compareTo(A)<0)?this:A}function bnMax(A){return(this.compareTo(A)>0)?this:A}function bnpBitwiseTo(B,F,D){var C,E,A=Math.min(B.t,this.t);for(C=0;C<A;++C){D[C]=F(this[C],B[C])}if(B.t<this.t){E=B.s&this.DM;for(C=A;C<this.t;++C){D[C]=F(this[C],E)}D.t=this.t}else{E=this.s&this.DM;for(C=A;C<B.t;++C){D[C]=F(E,B[C])}D.t=B.t}D.s=F(this.s,B.s);D.clamp()}function op_and(A,B){return A&B}function bnAnd(A){var B=nbi();this.bitwiseTo(A,op_and,B);return B}function op_or(A,B){return A|B}function bnOr(A){var B=nbi();this.bitwiseTo(A,op_or,B);return B}function op_xor(A,B){return A^B}function bnXor(A){var B=nbi();this.bitwiseTo(A,op_xor,B);return B}function op_andnot(A,B){return A&~B}function bnAndNot(A){var B=nbi();this.bitwiseTo(A,op_andnot,B);return B}function bnNot(){var B=nbi();for(var A=0;A<this.t;++A){B[A]=this.DM&~this[A]}B.t=this.t;B.s=~this.s;return B}function bnShiftLeft(B){var A=nbi();if(B<0){this.rShiftTo(-B,A)}else{this.lShiftTo(B,A)}return A}function bnShiftRight(B){var A=nbi();if(B<0){this.lShiftTo(-B,A)}else{this.rShiftTo(B,A)}return A}function lbit(A){if(A==0){return -1}var B=0;if((A&65535)==0){A>>=16;B+=16}if((A&255)==0){A>>=8;B+=8}if((A&15)==0){A>>=4;B+=4}if((A&3)==0){A>>=2;B+=2}if((A&1)==0){++B}return B}function bnGetLowestSetBit(){for(var A=0;A<this.t;++A){if(this[A]!=0){return A*this.DB+lbit(this[A])}}if(this.s<0){return this.t*this.DB}return -1}function cbit(A){var B=0;while(A!=0){A&=A-1;++B}return B}function bnBitCount(){var C=0,A=this.s&this.DM;for(var B=0;B<this.t;++B){C+=cbit(this[B]^A)}return C}function bnTestBit(B){var A=Math.floor(B/this.DB);if(A>=this.t){return(this.s!=0)}return((this[A]&(1<<(B%this.DB)))!=0)}function bnpChangeBit(C,B){var A=BigInteger.ONE.shiftLeft(C);this.bitwiseTo(A,B,A);return A}function bnSetBit(A){return this.changeBit(A,op_or)}function bnClearBit(A){return this.changeBit(A,op_andnot)}function bnFlipBit(A){return this.changeBit(A,op_xor)}function bnpAddTo(B,D){var C=0,E=0,A=Math.min(B.t,this.t);while(C<A){E+=this[C]+B[C];D[C++]=E&this.DM;E>>=this.DB}if(B.t<this.t){E+=B.s;while(C<this.t){E+=this[C];D[C++]=E&this.DM;E>>=this.DB}E+=this.s}else{E+=this.s;while(C<B.t){E+=B[C];D[C++]=E&this.DM;E>>=this.DB}E+=B.s}D.s=(E<0)?-1:0;if(E>0){D[C++]=E}else{if(E<-1){D[C++]=this.DV+E}}D.t=C;D.clamp()}function bnAdd(A){var B=nbi();this.addTo(A,B);return B}function bnSubtract(A){var B=nbi();this.subTo(A,B);return B}function bnMultiply(A){var B=nbi();this.multiplyTo(A,B);return B}function bnDivide(A){var B=nbi();this.divRemTo(A,B,null);return B}function bnRemainder(A){var B=nbi();this.divRemTo(A,null,B);return B}function bnDivideAndRemainder(A){var C=nbi(),B=nbi();this.divRemTo(A,C,B);return new Array(C,B)}function bnpDMultiply(A){this[this.t]=this.am(0,A-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(B,A){while(this.t<=A){this[this.t++]=0}this[A]+=B;while(this[A]>=this.DV){this[A]-=this.DV;if(++A>=this.t){this[this.t++]=0}++this[A]}}function NullExp(){}function nNop(A){return A}function nMulTo(A,C,B){A.multiplyTo(C,B)}function nSqrTo(A,B){A.squareTo(B)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(A){return this.exp(A,new NullExp())}function bnpMultiplyLowerTo(A,E,D){var C=Math.min(this.t+A.t,E);D.s=0;D.t=C;while(C>0){D[--C]=0}var B;for(B=D.t-this.t;C<B;++C){D[C+this.t]=this.am(0,A[C],D,C,0,this.t)}for(B=Math.min(A.t,E);C<B;++C){this.am(0,A[C],D,C,0,E-C)}D.clamp()}function bnpMultiplyUpperTo(A,D,C){--D;var B=C.t=this.t+A.t-D;C.s=0;while(--B>=0){C[B]=0}for(B=Math.max(D-this.t,0);B<A.t;++B){C[this.t+B-D]=this.am(D-B,A[B],C,0,0,this.t+B-D)}C.clamp();C.drShiftTo(1,C)}function Barrett(A){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*A.t,this.r2);this.mu=this.r2.divide(A);this.m=A}function barrettConvert(A){if(A.s<0||A.t>2*this.m.t){return A.mod(this.m)}else{if(A.compareTo(this.m)<0){return A}else{var B=nbi();A.copyTo(B);this.reduce(B);return B}}}function barrettRevert(A){return A}function barrettReduce(A){A.drShiftTo(this.m.t-1,this.r2);if(A.t>this.m.t+1){A.t=this.m.t+1;A.clamp()}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(A.compareTo(this.r2)<0){A.dAddOffset(1,this.m.t+1)}A.subTo(this.r2,A);while(A.compareTo(this.m)>=0){A.subTo(this.m,A)}}function barrettSqrTo(A,B){A.squareTo(B);this.reduce(B)}function barrettMulTo(A,C,B){A.multiplyTo(C,B);this.reduce(B)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(J,E){var H=J.bitLength(),F,B=nbv(1),M;if(H<=0){return B}else{if(H<18){F=1}else{if(H<48){F=3}else{if(H<144){F=4}else{if(H<768){F=5}else{F=6}}}}}if(H<8){M=new Classic(E)}else{if(E.isEven()){M=new Barrett(E)}else{M=new Montgomery(E)}}var I=new Array(),D=3,K=F-1,A=(1<<F)-1;I[1]=M.convert(this);if(F>1){var P=nbi();M.sqrTo(I[1],P);while(D<=A){I[D]=nbi();M.mulTo(P,I[D-2],I[D]);D+=2}}var G=J.t-1,N,L=true,C=nbi(),O;H=nbits(J[G])-1;while(G>=0){if(H>=K){N=(J[G]>>(H-K))&A}else{N=(J[G]&((1<<(H+1))-1))<<(K-H);if(G>0){N|=J[G-1]>>(this.DB+H-K)}}D=F;while((N&1)==0){N>>=1;--D}if((H-=D)<0){H+=this.DB;--G}if(L){I[N].copyTo(B);L=false}else{while(D>1){M.sqrTo(B,C);M.sqrTo(C,B);D-=2}if(D>0){M.sqrTo(B,C)}else{O=B;B=C;C=O}M.mulTo(C,I[N],B)}while(G>=0&&(J[G]&(1<<H))==0){M.sqrTo(B,C);O=B;B=C;C=O;if(--H<0){H=this.DB-1;--G}}}return M.revert(B)}function bnGCD(B){var A=(this.s<0)?this.negate():this.clone();var F=(B.s<0)?B.negate():B.clone();if(A.compareTo(F)<0){var D=A;A=F;F=D}var C=A.getLowestSetBit(),E=F.getLowestSetBit();if(E<0){return A}if(C<E){E=C}if(E>0){A.rShiftTo(E,A);F.rShiftTo(E,F)}while(A.signum()>0){if((C=A.getLowestSetBit())>0){A.rShiftTo(C,A)}if((C=F.getLowestSetBit())>0){F.rShiftTo(C,F)}if(A.compareTo(F)>=0){A.subTo(F,A);A.rShiftTo(1,A)}else{F.subTo(A,F);F.rShiftTo(1,F)}}if(E>0){F.lShiftTo(E,F)}return F}function bnpModInt(D){if(D<=0){return 0}var C=this.DV%D,B=(this.s<0)?D-1:0;if(this.t>0){if(C==0){B=this[0]%D}else{for(var A=this.t-1;A>=0;--A){B=(C*B+this[A])%D}}}return B}function bnModInverse(B){var F=B.isEven();if((this.isEven()&&F)||B.signum()==0){return BigInteger.ZERO}var E=B.clone(),D=this.clone();var C=nbv(1),A=nbv(0),H=nbv(0),G=nbv(1);while(E.signum()!=0){while(E.isEven()){E.rShiftTo(1,E);if(F){if(!C.isEven()||!A.isEven()){C.addTo(this,C);A.subTo(B,A)}C.rShiftTo(1,C)}else{if(!A.isEven()){A.subTo(B,A)}}A.rShiftTo(1,A)}while(D.isEven()){D.rShiftTo(1,D);if(F){if(!H.isEven()||!G.isEven()){H.addTo(this,H);G.subTo(B,G)}H.rShiftTo(1,H)}else{if(!G.isEven()){G.subTo(B,G)}}G.rShiftTo(1,G)}if(E.compareTo(D)>=0){E.subTo(D,E);if(F){C.subTo(H,C)}A.subTo(G,A)}else{D.subTo(E,D);if(F){H.subTo(C,H)}G.subTo(A,G)}}if(D.compareTo(BigInteger.ONE)!=0){return BigInteger.ZERO}if(G.compareTo(B)>=0){return G.subtract(B)}if(G.signum()<0){G.addTo(B,G)}else{return G}if(G.signum()<0){return G.add(B)}else{return G}}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(E){var D,B=this.abs();if(B.t==1&&B[0]<=lowprimes[lowprimes.length-1]){for(D=0;D<lowprimes.length;++D){if(B[0]==lowprimes[D]){return true}}return false}if(B.isEven()){return false}D=1;while(D<lowprimes.length){var A=lowprimes[D],C=D+1;while(C<lowprimes.length&&A<lplim){A*=lowprimes[C++]}A=B.modInt(A);while(D<C){if(A%lowprimes[D++]==0){return false}}}return B.millerRabin(E)}function bnpMillerRabin(E){var F=this.subtract(BigInteger.ONE);var B=F.getLowestSetBit();if(B<=0){return false}var G=F.shiftRight(B);E=(E+1)>>1;if(E>lowprimes.length){E=lowprimes.length}var A=nbi();for(var D=0;D<E;++D){A.fromInt(lowprimes[D]);var H=A.modPow(G,this);if(H.compareTo(BigInteger.ONE)!=0&&H.compareTo(F)!=0){var C=1;while(C++<B&&H.compareTo(F)!=0){H=H.modPowInt(2,this);if(H.compareTo(BigInteger.ONE)==0){return false}}if(H.compareTo(F)!=0){return false}}}return true}BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=bnIsProbablePrime;function Arcfour(){this.i=0;this.j=0;this.S=new Array()}function ARC4init(D){var C,A,B;for(C=0;C<256;++C){this.S[C]=C}A=0;for(C=0;C<256;++C){A=(A+this.S[C]+D[C%D.length])&255;B=this.S[C];this.S[C]=this.S[A];this.S[A]=B}this.i=0;this.j=0}function ARC4next(){var A;this.i=(this.i+1)&255;this.j=(this.j+this.S[this.i])&255;A=this.S[this.i];this.S[this.i]=this.S[this.j];this.S[this.j]=A;return this.S[(A+this.S[this.i])&255]}Arcfour.prototype.init=ARC4init;Arcfour.prototype.next=ARC4next;function prng_newstate(){return new Arcfour()}var rng_psize=256;var rng_state;var rng_pool;var rng_pptr;function rng_seed_int(A){rng_pool[rng_pptr++]^=A&255;rng_pool[rng_pptr++]^=(A>>8)&255;rng_pool[rng_pptr++]^=(A>>16)&255;rng_pool[rng_pptr++]^=(A>>24)&255;if(rng_pptr>=rng_psize){rng_pptr-=rng_psize}}function rng_seed_time(){rng_seed_int(new Date().getTime())}if(rng_pool==null){rng_pool=new Array();rng_pptr=0;var t;if(navigator.appName=="Netscape"&&navigator.appVersion<"5"&&window.crypto){var z=window.crypto.random(32);for(t=0;t<z.length;++t){rng_pool[rng_pptr++]=z.charCodeAt(t)&255}}while(rng_pptr<rng_psize){t=Math.floor(65536*Math.random());rng_pool[rng_pptr++]=t>>>8;rng_pool[rng_pptr++]=t&255}rng_pptr=0;rng_seed_time()}function rng_get_byte(){if(rng_state==null){rng_seed_time();rng_state=prng_newstate();rng_state.init(rng_pool);for(rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr){rng_pool[rng_pptr]=0}rng_pptr=0}return rng_state.next()}function rng_get_bytes(B){var A;for(A=0;A<B.length;++A){B[A]=rng_get_byte()}}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes;function parseBigInt(B,A){return new BigInteger(B,A)}function linebrk(C,D){var A="";var B=0;while(B+D<C.length){A+=C.substring(B,B+D)+"\n";B+=D}return A+C.substring(B,C.length)}function byte2Hex(A){if(A<16){return"0"+A.toString(16)}else{return A.toString(16)}}function pkcs1pad2(D,F){if(F<D.length+11){alert("Message too long for RSA");return null}var E=new Array();var C=D.length-1;while(C>=0&&F>0){E[--F]=D.charCodeAt(C--)}E[--F]=0;var B=new SecureRandom();var A=new Array();while(F>2){A[0]=0;while(A[0]==0){B.nextBytes(A)}E[--F]=A[0]}E[--F]=2;E[--F]=0;return new BigInteger(E)}function RSAKey(){this.n=null;this.e=0;this.d=null;this.p=null;this.q=null;this.dmp1=null;this.dmq1=null;this.coeff=null}function RSASetPublic(B,A){if(B!=null&&A!=null&&B.length>0&&A.length>0){this.n=parseBigInt(B,16);this.e=parseInt(A,16)}else{alert("Invalid RSA public key")}}function RSADoPublic(A){return A.modPowInt(this.e,this.n)}function RSAEncrypt(C){var A=pkcs1pad2(C,(this.n.bitLength()+7)>>3);if(A==null){return null}var D=this.doPublic(A);if(D==null){return null}var B=D.toString(16);if((B.length&1)==0){return B}else{return"0"+B}}RSAKey.prototype.doPublic=RSADoPublic;RSAKey.prototype.setPublic=RSASetPublic;RSAKey.prototype.encrypt=RSAEncrypt;function pkcs1unpad2(D,E){var A=D.toByteArray();var C=0;while(C<A.length&&A[C]==0){++C}if(A.length-C!=E-1||A[C]!=2){return null}++C;while(A[C]!=0){if(++C>=A.length){return null}}var B="";while(++C<A.length){B+=String.fromCharCode(A[C])}return B}function RSASetPrivate(C,A,B){if(C!=null&&A!=null&&C.length>0&&A.length>0){this.n=parseBigInt(C,16);this.e=parseInt(A,16);this.d=parseBigInt(B,16)}else{alert("Invalid RSA private key")}}function RSASetPrivateEx(J,G,H,F,B,A,K,I){if(J!=null&&G!=null&&J.length>0&&G.length>0){this.n=parseBigInt(J,16);this.e=parseInt(G,16);this.d=parseBigInt(H,16);this.p=parseBigInt(F,16);this.q=parseBigInt(B,16);this.dmp1=parseBigInt(A,16);this.dmq1=parseBigInt(K,16);this.coeff=parseBigInt(I,16)}else{alert("Invalid RSA private key")}}function RSAGenerate(C,K){var A=new SecureRandom();var H=C>>1;this.e=parseInt(K,16);var D=new BigInteger(K,16);for(;;){for(;;){this.p=new BigInteger(C-H,1,A);if(this.p.subtract(BigInteger.ONE).gcd(D).compareTo(BigInteger.ONE)==0&&this.p.isProbablePrime(10)){break}}for(;;){this.q=new BigInteger(H,1,A);if(this.q.subtract(BigInteger.ONE).gcd(D).compareTo(BigInteger.ONE)==0&&this.q.isProbablePrime(10)){break}}if(this.p.compareTo(this.q)<=0){var J=this.p;this.p=this.q;this.q=J}var I=this.p.subtract(BigInteger.ONE);var F=this.q.subtract(BigInteger.ONE);var G=I.multiply(F);if(G.gcd(D).compareTo(BigInteger.ONE)==0){this.n=this.p.multiply(this.q);this.d=D.modInverse(G);this.dmp1=this.d.mod(I);this.dmq1=this.d.mod(F);this.coeff=this.q.modInverse(this.p);break}}}function RSADoPrivate(A){if(this.p==null||this.q==null){return A.modPow(this.d,this.n)}var C=A.mod(this.p).modPow(this.dmp1,this.p);var B=A.mod(this.q).modPow(this.dmq1,this.q);while(C.compareTo(B)<0){C=C.add(this.p)}return C.subtract(B).multiply(this.coeff).mod(this.p).multiply(this.q).add(B)}function RSADecrypt(B){var C=parseBigInt(B,16);var A=this.doPrivate(C);if(A==null){return null}return pkcs1unpad2(A,(this.n.bitLength()+7)>>3)}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;function Cipher(E,A){var D=4;var H=A.length/D-1;var G=[[],[],[],[]];for(var F=0;F<4*D;F++){G[F%4][Math.floor(F/4)]=E[F]}G=AddRoundKey(G,A,0,D);for(var C=1;C<H;C++){G=SubBytes(G,D);G=ShiftRows(G,D);G=MixColumns(G,D);G=AddRoundKey(G,A,C,D)}G=SubBytes(G,D);G=ShiftRows(G,D);G=AddRoundKey(G,A,H,D);var B=new Array(4*D);for(var F=0;F<4*D;F++){B[F]=G[F%4][Math.floor(F/4)]}return B}function SubBytes(B,A){for(var C=0;C<4;C++){for(var D=0;D<A;D++){B[C][D]=Sbox[B[C][D]]}}return B}function ShiftRows(C,A){var B=new Array(4);for(var D=1;D<4;D++){for(var E=0;E<4;E++){B[E]=C[D][(E+D)%A]}for(var E=0;E<4;E++){C[D][E]=B[E]}}return C}function MixColumns(E,C){for(var F=0;F<4;F++){var B=new Array(4);var A=new Array(4);for(var D=0;D<4;D++){B[D]=E[D][F];A[D]=E[D][F]&128?E[D][F]<<1^283:E[D][F]<<1}E[0][F]=A[0]^B[1]^A[1]^B[2]^B[3];E[1][F]=B[0]^A[1]^B[2]^A[2]^B[3];E[2][F]=B[0]^B[1]^A[2]^B[3]^A[3];E[3][F]=B[0]^A[0]^B[1]^B[2]^A[3]}return E}function AddRoundKey(E,A,C,B){for(var D=0;D<4;D++){for(var F=0;F<B;F++){E[D][F]^=A[C*4+F][D]}}return E}function KeyExpansion(F){var D=4;var B=F.length/4;var G=B+6;var E=new Array(D*(G+1));var H=new Array(4);for(var C=0;C<B;C++){var A=[F[4*C],F[4*C+1],F[4*C+2],F[4*C+3]];E[C]=A}for(var C=B;C<(D*(G+1));C++){E[C]=new Array(4);for(var I=0;I<4;I++){H[I]=E[C-1][I]}if(C%B==0){H=SubWord(RotWord(H));for(var I=0;I<4;I++){H[I]^=Rcon[C/B][I]}}else{if(B>6&&C%B==4){H=SubWord(H)}}for(var I=0;I<4;I++){E[C][I]=E[C-B][I]^H[I]}}return E}function SubWord(A){for(var B=0;B<4;B++){A[B]=Sbox[A[B]]}return A}function RotWord(A){var C=A[0];for(var B=0;B<3;B++){A[B]=A[B+1]}A[3]=C;return A}var Sbox=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];var Rcon=[[0,0,0,0],[1,0,0,0],[2,0,0,0],[4,0,0,0],[8,0,0,0],[16,0,0,0],[32,0,0,0],[64,0,0,0],[128,0,0,0],[27,0,0,0],[54,0,0,0]];function AESEncryptCtr(G,A,Q){var H=16;if(!(Q==128||Q==192||Q==256)){return""}G=G.encodeUTF8();A=A.encodeUTF8();var I=Q/8;var D=new Array(I);for(var O=0;O<I;O++){D[O]=isNaN(A.charCodeAt(O))?0:A.charCodeAt(O)}var V=Cipher(D,KeyExpansion(D));V=V.concat(V.slice(0,I-16));var C=new Array(H);var P=(new Date()).getTime();var B=Math.floor(P/1000);var E=P%1000;for(var O=0;O<4;O++){C[O]=(B>>>O*8)&255}for(var O=0;O<4;O++){C[O+4]=E&255}var K="";for(var O=0;O<8;O++){K+=String.fromCharCode(C[O])}var S=KeyExpansion(V);var N=Math.ceil(G.length/H);var J=new Array(N);for(var T=0;T<N;T++){for(var R=0;R<4;R++){C[15-R]=(T>>>R*8)&255}for(var R=0;R<4;R++){C[15-R-4]=(T/4294967296>>>R*8)}var F=Cipher(C,S);var M=T<N-1?H:(G.length-1)%H+1;var L=new Array(M);for(var O=0;O<M;O++){L[O]=F[O]^G.charCodeAt(T*H+O);L[O]=String.fromCharCode(L[O])}J[T]=L.join("")}var U=K+J.join("");U=U.encodeBase64();return U}function AESDecryptCtr(Q,C,M){var J=16;if(!(M==128||M==192||M==256)){return""}Q=Q.decodeBase64();C=C.encodeUTF8();var K=M/8;var G=new Array(K);for(var L=0;L<K;L++){G[L]=isNaN(C.charCodeAt(L))?0:C.charCodeAt(L)}var R=Cipher(G,KeyExpansion(G));R=R.concat(R.slice(0,K-16));var D=new Array(8);ctrTxt=Q.slice(0,8);for(var L=0;L<8;L++){D[L]=ctrTxt.charCodeAt(L)}var O=KeyExpansion(R);var E=Math.ceil((Q.length-8)/J);var F=new Array(E);for(var P=0;P<E;P++){F[P]=Q.slice(8+P*J,8+P*J+J)}Q=F;var A=new Array(Q.length);for(var P=0;P<E;P++){for(var N=0;N<4;N++){D[15-N]=((P)>>>N*8)&255}for(var N=0;N<4;N++){D[15-N-4]=(((P+1)/4294967296-1)>>>N*8)&255}var I=Cipher(D,O);var B=new Array(Q[P].length);for(var L=0;L<Q[P].length;L++){B[L]=I[L]^Q[P].charCodeAt(L);B[L]=String.fromCharCode(B[L])}A[P]=B.join("")}var H=A.join("");H=H.decodeUTF8();return H}var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";String.prototype.encodeBase64=function(L){L=(typeof L=="undefined")?false:L;var D,B,A,N,K,H,G,E,F=[],C="",J,M,I;M=L?this.encodeUTF8():this;J=M.length%3;if(J>0){while(J++<3){C+="=";M+="\0"}}for(J=0;J<M.length;J+=3){D=M.charCodeAt(J);B=M.charCodeAt(J+1);A=M.charCodeAt(J+2);N=D<<16|B<<8|A;K=N>>18&63;H=N>>12&63;G=N>>6&63;E=N&63;F[J/3]=b64.charAt(K)+b64.charAt(H)+b64.charAt(G)+b64.charAt(E)}I=F.join("");I=I.slice(0,I.length-C.length)+C;return I};String.prototype.decodeBase64=function(C){C=(typeof C=="undefined")?false:C;var D,B,A,K,H,F,E,M,G=[],L,J;J=C?this.decodeUTF8():this;for(var I=0;I<J.length;I+=4){K=b64.indexOf(J.charAt(I));H=b64.indexOf(J.charAt(I+1));F=b64.indexOf(J.charAt(I+2));E=b64.indexOf(J.charAt(I+3));M=K<<18|H<<12|F<<6|E;D=M>>>16&255;B=M>>>8&255;A=M&255;G[I/4]=String.fromCharCode(D,B,A);if(E==64){G[I/4]=String.fromCharCode(D,B)}if(F==64){G[I/4]=String.fromCharCode(D)}}L=G.join("");return C?L.decodeUTF8():L};String.prototype.encodeUTF8=function(){var A=this.replace(/[\u0080-\u07ff]/g,function(C){var B=C.charCodeAt(0);return String.fromCharCode(192|B>>6,128|B&63)});A=A.replace(/[\u0800-\uffff]/g,function(C){var B=C.charCodeAt(0);return String.fromCharCode(224|B>>12,128|B>>6&63,128|B&63)});return A};String.prototype.decodeUTF8=function(){var A=this.replace(/[\u00c0-\u00df][\u0080-\u00bf]/g,function(C){var B=(C.charCodeAt(0)&31)<<6|C.charCodeAt(1)&63;return String.fromCharCode(B)});A=A.replace(/[\u00e0-\u00ef][\u0080-\u00bf][\u0080-\u00bf]/g,function(C){var B=((C.charCodeAt(0)&15)<<12)|((C.charCodeAt(1)&63)<<6)|(C.charCodeAt(2)&63);return String.fromCharCode(B)});return A};